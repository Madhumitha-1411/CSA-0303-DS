#include <stdio.h>
#define V 10
#define INF 9999

int parent[V];

int find(int i) {
    while (parent[i])
        i = parent[i];
    return i;
}

int uni(int i, int j) {
    if (i != j) {
        parent[j] = i;
        return 1;
    }
    return 0;
}

void kruskal(int graph[V][V], int n) {
    int edge = 1, min, a, b, u, v;
    printf("Edge \tWeight\n");

    while (edge < n) {
        min = INF;
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                if (graph[i][j] < min && i != j) {
                    min = graph[i][j];
                    a = u = i;
                    b = v = j;
                }

        u = find(u);
        v = find(v);

        if (uni(u, v)) {
            printf("%d - %d \t%d\n", a, b, min);
            edge++;
        }
        graph[a][b] = graph[b][a] = INF;
    }
}

int main() {
    int graph[V][V], n;
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter adjacency matrix (use 9999 for no edge):\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &graph[i][j]);

    kruskal(graph, n);
    return 0;
}
