#include <stdio.h>
#define SIZE 100

// Function to display array elements
void display(int arr[], int n) {
    printf("Array elements: ");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

// Function to insert an element at a given position
void insert(int arr[], int *n, int pos, int value) {
    if (*n >= SIZE || pos < 0 || pos > *n) {
        printf("Insertion not possible.\n");
        return;
    }
    for (int i = *n; i > pos; i--)
        arr[i] = arr[i - 1];
    arr[pos] = value;
    (*n)++;
}

// Function to delete an element at a given position
void delete(int arr[], int *n, int pos) {
    if (pos < 0 || pos >= *n) {
        printf("Deletion not possible.\n");
        return;
    }
    for (int i = pos; i < *n - 1; i++)
        arr[i] = arr[i + 1];
    (*n)--;
}

// Function to find an element
int find(int arr[], int n, int key) {
    for (int i = 0; i < n; i++)
        if (arr[i] == key)
            return i;
    return -1;
}

int main() {
    int arr[SIZE], n = 0, choice, value, pos, key;

    while (1) {
        printf("\n1. Insert\n2. Delete\n3. Find\n4. Display\n5. Exit\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value and position to insert: ");
                scanf("%d%d", &value, &pos);
                insert(arr, &n, pos, value);
                break;

            case 2:
                printf("Enter position to delete: ");
                scanf("%d", &pos);
                delete(arr, &n, pos);
                break;

            case 3:
                printf("Enter value to find: ");
                scanf("%d", &key);
                pos = find(arr, n, key);
                if (pos != -1)
                    printf("Element found at position: %d\n", pos);
                else
                    printf("Element not found.\n");
                break;

            case 4:
                display(arr, n);
                break;

            case 5:
                return 0;

            default:
                printf("Invalid choice!\n");
        }
    }

    return 0;
}
